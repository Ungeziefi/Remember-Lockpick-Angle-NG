#pragma once

#include "RE/T/TESFullName.h"

namespace RE
{
	class __declspec(novtable) MapMarkerData :
		public TESFullName  // 00
	{
		enum MARKER_TYPE : std::uint16_t
		{
			kCave = 0x0,
			kCity = 0x1,
			kDiamondCity = 0x2,
			kEncampment = 0x3,
			kIndustrial = 0x4,
			kGovtBuilding = 0x5,
			kMetro = 0x6,
			kMilitaryBase = 0x7,
			kLandmark = 0x8,
			kOffice = 0x9,
			kRuinsTown = 0xA,
			kRuinsUrban = 0xB,
			kSanctuary = 0xC,
			kSettlement = 0xD,
			kSewer = 0xE,
			kVault = 0xF,
			kAirfield = 0x10,
			kBunkerHill = 0x11,
			kCamper = 0x12,
			kCar = 0x13,
			kChurch = 0x14,
			kCountryClub = 0x15,
			kCustomHouse = 0x16,
			kDriveIn = 0x17,
			kElevatedHighway = 0x18,
			kFaneuilHall = 0x19,
			kFarm = 0x1A,
			kFillingStation = 0x1B,
			kForest = 0x1C,
			kGoodNeighbor = 0x1D,
			kGraveyard = 0x1E,
			kHospital = 0x1F,
			kIndustrialDome = 0x20,
			kIndustrialStacks = 0x21,
			kInstitute = 0x22,
			kIrishPride = 0x23,
			kJunkyard = 0x24,
			kObservatory = 0x25,
			kPier = 0x26,
			kPondOrLake = 0x27,
			kQuarry = 0x28,
			kRadioactiveArea = 0x29,
			kRadioTower = 0x2A,
			kSalem = 0x2B,
			kSchool = 0x2C,
			kShipwreck = 0x2D,
			kSubmarine = 0x2E,
			kSwanPond = 0x2F,
			kSynthHead = 0x0,
			kTown = 0x31,
			kBOS = 0x32,
			kBrownstone = 0x33,
			kBunker = 0x34,
			kCastle = 0x35,
			kSkyscraper = 0x36,
			kLibertalia = 0x37,
			kLowrise = 0x38,
			kMinutemen = 0x39,
			kPoliceStation = 0x3A,
			kPrydwen = 0x3B,
			kRailroadFaction = 0x3C,
			kRailroad = 0x3D,
			kSatellite = 0x3E,
			kSentinel = 0x3F,
			kUSSConstitution = 0x40,
			kMechanist = 0x41,
			kRaiderSettlement = 0x42,
			kVassalSettlement = 0x43,
			kPotentialVassalSettlement = 0x44,
			kBottlingPlant = 0x45,
			kGalactic = 0x46,
			kHub = 0x47,
			kKiddieKingdom = 0x48,
			kMonorail = 0x49,
			kRides = 0x4A,
			kSafari = 0x4B,
			kWildWest = 0x4C,
			kPOI = 0x4D,
			kDisciples = 0x4E,
			kOperators = 0x4F,
			kPack = 0x50,
			kDoor = 0x51,
			kCountEditor = 0x52,
			kQuest = 0x53,
			kQuestDoor = 0x54,
			kQuestMultiple = 0x55,
			kPlayerSet = 0x56,
			kPlayerLocation = 0x57,
			kPowerArmorLocation = 0x58,
			kDogmeat = 0x59,
			kTeammate = 0x5A,

			kCountTotal = 0x5B
		};

		std::uint8_t flags;          // 10
		std::uint8_t originalFlags;  // 11
		MARKER_TYPE  type;           // 12
	};
	static_assert(sizeof(MapMarkerData) == 0x18);
}
